{"ast":null,"code":"import _regeneratorRuntime from \"E:/JS/hmtt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport \"vant/es/notify/style/less\";\nimport _Notify from \"vant/es/notify\";\nimport _asyncToGenerator from \"E:/JS/hmtt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { loginAPI } from '@/api';\nimport { setToken } from '@/utils/token.js';\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      user: {\n        mobile: '',\n        code: ''\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(values) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.isLoading = true;\n                _context.prev = 1;\n                _context.next = 4;\n                return loginAPI(_this.user);\n\n              case 4:\n                res = _context.sent;\n\n                _Notify({\n                  type: 'success',\n                  message: '登录成功'\n                });\n\n                setToken(res.data.data.token);\n                console.log(res);\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n\n                _Notify({\n                  type: 'danger',\n                  message: '登录失败'\n                });\n\n                console.log(_context.t0);\n\n              case 14:\n                _this.isLoading = false;\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AAEA;AACA;EACAA,aADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,UADA;QAEAC;MAFA,CADA;MAKAC;IALA;EAOA,CAVA;EAWAC;IACAC,QADA,oBACAC,MADA,EACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBADA;gBAAA;gBAAA,OAGAC,oBAHA;;cAAA;gBAGAC,GAHA;;gBAIA;kBAAAC;kBAAAC;gBAAA;;gBACAC;gBACAC;gBANA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAQA;kBAAAH;kBAAAC;gBAAA;;gBACAE;;cATA;gBAWA;;cAXA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYA;EAbA;AAXA","names":["name","data","user","mobile","code","isLoading","methods","onSubmit","values","loginAPI","res","type","message","setToken","console"],"sourceRoot":"src/views/Login","sources":["index.vue"],"sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n      <van-nav-bar title=\"黑马头条\" />\r\n      <van-form @submit=\"onSubmit\">\r\n  <van-field\r\n    v-model=\"user.mobile\"\r\n    name=\"mobile\"\r\n    label=\"手机号\"\r\n    placeholder=\"请输入11位手机号\"\r\n    required\r\n    :rules=\"[{ required: true, message: '请输入手机号', pattern: /^1[3-9]\\d{9}$/}]\"\r\n  />\r\n  <van-field\r\n    v-model=\"user.code\"\r\n    type=\"password\"\r\n    name=\"code\"\r\n    label=\"密码\"\r\n    required\r\n    placeholder=\"请输入6位密码\"\r\n    :rules=\"[{ required: true, message: '请输入密码', pattern: /^\\d{6}$/}]\"\r\n  />\r\n  <div style=\"margin: 16px;\">\r\n    <van-button\r\n    :disabled = \"isLoading\"\r\n    :loading = \"isLoading\"\r\n    loading-text=\"登录中...\"\r\n    round\r\n    block\r\n    type=\"info\"\r\n    native-type=\"submit\">登录</van-button>\r\n  </div>\r\n</van-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { loginAPI } from '@/api'\r\nimport { Notify } from 'vant'\r\nimport { setToken } from '@/utils/token.js'\r\nexport default {\r\n  name: 'Login',\r\n  data () {\r\n    return {\r\n      user: {\r\n        mobile: '',\r\n        code: ''\r\n      },\r\n      isLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit (values) {\r\n      this.isLoading = true\r\n      try {\r\n        const res = await loginAPI(this.user)\r\n        Notify({ type: 'success', message: '登录成功' })\r\n        setToken(res.data.data.token)\r\n        console.log(res)\r\n      } catch (error) {\r\n        Notify({ type: 'danger', message: '登录失败' })\r\n        console.log(error)\r\n      }\r\n      this.isLoading = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n"]},"metadata":{},"sourceType":"module"}